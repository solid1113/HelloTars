// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.7.2.
// **********************************************************************

package com.tencent.tars.client.testapp;

import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.annotation.*;
import com.qq.tars.common.support.Holder;
import java.util.concurrent.CompletableFuture;

@Servant
public interface HelloPrx {

	 String hello(@TarsMethodParameter(name="no")int no, @TarsMethodParameter(name="name")String name);

	 String hello(@TarsMethodParameter(name="no")int no, @TarsMethodParameter(name="name")String name, @TarsContext java.util.Map<String, String> ctx);

	 void async_hello(@TarsCallback HelloPrxCallback callback, @TarsMethodParameter(name="no")int no, @TarsMethodParameter(name="name")String name);

	 void async_hello(@TarsCallback HelloPrxCallback callback, @TarsMethodParameter(name="no")int no, @TarsMethodParameter(name="name")String name, @TarsContext java.util.Map<String, String> ctx);

	 CompletableFuture<String>  promise_hello(@TarsMethodParameter(name="no")int no, @TarsMethodParameter(name="name")String name);

	 CompletableFuture<String>  promise_hello(@TarsMethodParameter(name="no")int no, @TarsMethodParameter(name="name")String name, @TarsContext java.util.Map<String, String> ctx);

	 int getAllUserInfo(@TarsHolder(name="resp") Holder<java.util.List<User>> resp);

	 int getAllUserInfo(@TarsHolder(name="resp") Holder<java.util.List<User>> resp, @TarsContext java.util.Map<String, String> ctx);

	 void async_getAllUserInfo(@TarsCallback HelloPrxCallback callback);

	 void async_getAllUserInfo(@TarsCallback HelloPrxCallback callback, @TarsContext java.util.Map<String, String> ctx);

	 CompletableFuture<java.lang.Integer>  promise_getAllUserInfo(@TarsHolder(name="resp") Holder<java.util.List<User>> resp);

	 CompletableFuture<java.lang.Integer>  promise_getAllUserInfo(@TarsHolder(name="resp") Holder<java.util.List<User>> resp, @TarsContext java.util.Map<String, String> ctx);

	 java.util.List<User> getAllUserInfoAsReturn();

	 java.util.List<User> getAllUserInfoAsReturn(@TarsContext java.util.Map<String, String> ctx);

	 void async_getAllUserInfoAsReturn(@TarsCallback HelloPrxCallback callback);

	 void async_getAllUserInfoAsReturn(@TarsCallback HelloPrxCallback callback, @TarsContext java.util.Map<String, String> ctx);

	 CompletableFuture<java.util.List<User>>  promise_getAllUserInfoAsReturn();

	 CompletableFuture<java.util.List<User>>  promise_getAllUserInfoAsReturn(@TarsContext java.util.Map<String, String> ctx);
}
