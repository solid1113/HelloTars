// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.7.2.
// **********************************************************************

package com.tencent.tars.client.testapp;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class User {

	@TarsStructProperty(order = 0, isRequire = true)
	public String name = "";
	@TarsStructProperty(order = 1, isRequire = true)
	public int age = 0;
	@TarsStructProperty(order = 2, isRequire = true)
	public String address = "";
	@TarsStructProperty(order = 3, isRequire = false)
	public java.util.List<BankAccount> accounts = null;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public java.util.List<BankAccount> getAccounts() {
		return accounts;
	}

	public void setAccounts(java.util.List<BankAccount> accounts) {
		this.accounts = accounts;
	}

	public User() {
	}

	public User(String name, int age, String address, java.util.List<BankAccount> accounts) {
		this.name = name;
		this.age = age;
		this.address = address;
		this.accounts = accounts;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(name);
		result = prime * result + TarsUtil.hashCode(age);
		result = prime * result + TarsUtil.hashCode(address);
		result = prime * result + TarsUtil.hashCode(accounts);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof User)) {
			return false;
		}
		User other = (User) obj;
		return (
			TarsUtil.equals(name, other.name) &&
			TarsUtil.equals(age, other.age) &&
			TarsUtil.equals(address, other.address) &&
			TarsUtil.equals(accounts, other.accounts) 
		);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("User(");
		sb.append("name:");
		if (this.name == null) {
			sb.append("null");
		} else {
			sb.append(this.name);
		}
		sb.append(", ");
		sb.append("age:");
		sb.append(this.age);
		sb.append(", ");
		sb.append("address:");
		if (this.address == null) {
			sb.append("null");
		} else {
			sb.append(this.address);
		}
		sb.append(", ");
		sb.append("accounts:");
		if (this.accounts == null) {
			sb.append("null");
		} else {
			sb.append(this.accounts);
		}
		sb.append(")");
		return sb.toString();
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(name, 0);
		_os.write(age, 1);
		_os.write(address, 2);
		if (null != accounts) {
			_os.write(accounts, 3);
		}
	}

	static java.util.List<BankAccount> cache_accounts;
	static { 
		cache_accounts = new java.util.ArrayList<BankAccount>();
		BankAccount var_1 = new BankAccount();
		cache_accounts.add(var_1);
	}

	public void readFrom(TarsInputStream _is) {
		this.name = _is.readString(0, true);
		this.age = _is.read(age, 1, true);
		this.address = _is.readString(2, true);
		this.accounts = (java.util.List<BankAccount>) _is.read(cache_accounts, 3, false);
	}

}
